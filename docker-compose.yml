version: '3'
services:
  app:
    container_name: app
    working_dir: /var/www/html
    build: ./build/back
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
    depends_on:
      - db
      - rabbitmq
    env_file: 
      - ./.env
    networks:
      - apigateway
  rabbitmq:
    container_name: app_rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - /var/www/html
    networks:
      - apigateway
  front:
    container_name: front
    working_dir: /var/www/html
    build: ./build/front
    ports:
      - "81:81"
    depends_on:
      - app
    env_file: 
      - ./.env
    networks:
      - apigateway
  db:
    image: mysql:8.0.0
    container_name: app_db
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - database:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - apigateway
    command: ["--sql-mode=NO_ENGINE_SUBSTITUTION"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
networks:
  apigateway: 
    driver: bridge
    name: apigateway
volumes:
  database:
